#!/bin/bash

RUN="$1"
ARG="$2"
ALL="$@"
OPTIONS="$(echo $ALL | sed "s/^$RUN//g")"

if [ $RUN = 'up' ];
then
	docker compose up -d

elif [ $RUN = 'rebuild' ];
then
    start=`date +%s`

    echo 'Rebuilding everything'

	docker compose stop
	docker compose down
	docker compose rm -f
	docker system prune -f
	docker compose build
	docker compose up -d
	docker compose exec php php artisan route:clear
	docker compose exec php php artisan config:clear
	docker compose exec php php artisan cache:clear

    end=`date +%s`

    runtime=$((end-start))
    echo "Total time: ${runtime}s"

elif [ $RUN = 'stop' ];
then
	docker compose stop
	docker compose down

elif [ $RUN = 'composer' ];
then
    docker compose run composer $OPTIONS

elif [ $RUN = 'art' ];
then
	docker compose exec php php artisan $OPTIONS

elif [ $RUN = 'tink' ];
then
	docker compose exec php php artisan tinker

elif [ $RUN = 'bash' ];
then
	docker compose exec php bash

elif [ $RUN = 'stan' ];
then
	docker compose exec php ./vendor/bin/phpstan analyse $OPTIONS --configuration ./phpstan-config.neon

elif [ $RUN = 'format' ];
then
	docker compose exec php ./vendor/bin/php-cs-fixer fix --allow-risky=yes $OPTIONS

elif [ $RUN = 'tests' ];
then
	docker compose exec php php artisan dynamo:setup --confirm
	docker compose exec php cat /dev/null > ./storage/logs/laravel.log
	docker compose exec php ./vendor/bin/phpunit $OPTIONS --stop-on-failure

elif [ $RUN = 'coverage' ];
then
	docker compose exec php php artisan dynamo:setup --confirm
	docker compose exec php cat /dev/null > ./storage/logs/laravel.log
	docker compose exec php ./vendor/bin/phpunit $OPTIONS --coverage-html coverage
	open file:///$PWD/coverage/index.html

elif [ $RUN = 'phpmd' ];
then
	docker compose exec -T php ./vendor/bin/phpmd app/,Shoogly/ html phpmd-rules.xml > ./md/index.html
	open file:///$PWD/md/index.html
else
	echo "unknown run - $RUN"
fi
